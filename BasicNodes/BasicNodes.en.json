{
    "Enums":{
        "LogType":{
            "Info":"Information",
            "Debug":"Debug",
            "Warning":"Warning",
            "Error":"Error"
        }
    },
    "Flow":{
      "Parts": {
        "InputFile": {
          "Description": "An input node for a library file.  This is required and is the starting point of a flow.  Any input node can be used, just one is required."
        },
        "CopyFile": {
          "Description": "Copies a file to the destination path",
          "Fields": {
            "DestinationPath": "Destination Path",
            "DestinationPath-Help": "The path where the file will be copied too",
            "CopyFolder": "Copy Folder",
            "CopyFolder-Help": "If the relative library folder structure should be copied too"
          }
        },
        "DeleteSourceDirectory": {
          "Description": "Deletes the source directory of the original library file",
          "Fields": {
            "IfEmpty": "If Empty",
            "IfEmpty-Help": "Only delete the source directory if the it is empty",
            "IncludePatterns": "Include Patterns",
            "IncludePatterns-Help": "Optional, if set only files matching these patterns will be counted to see if the folder is empty.   Any of these patterns can match."
          }
        },
        "Executor": {
          "Description": "Execute the following process against the file.\nOutput 1: The process returned the success exit code\nOutput 2: The process return a non-successful exit code.",
          "Fields": {
            "FileName": "File Name",
            "FileName-Help": "The name of the file to execute",
            "Arguments": "Arguments",
            "Arguments-Help": "The arguments to be passed to the process to execute",
            "WorkingDirectory": "Working Directory",
            "WorkingDirectory-Help": "The directory where the process will be executed from",
            "SuccessCode": "Success Code",
            "SuccessCode-Help": "The exit code of the process indicating the process was successful.  Usually this should be 0.",
            "Timeout": "Timeout",
            "Timeout-Help": "How long the process can run for before being terminated.  Use 0 for no timeout.",
            "Timeout-Suffix": "seconds"
          }
        },
        "FileExtension": {
          "Description": "Checks if the file has one of the configured extensions.\n\nOutput 1: Matches\nOutput 2: Does not match",
          "Fields": {
            "Extensions": "Extensions",
            "Extensions-Help": "A list of case insensitive file extensions that will be matched against.\nOutput 1 Matches\nOutput 2: Does not match"
          }
        },
        "FileSize": {
          "Description": "Checks if the file size matches the configured parameters. The values are in megabytes.\n\nOutput 1: Matches\nOutput 2: Does not match",
          "Fields": {
            "Comparison": "Comparison",
            "Lower": "Lower",
            "Lower-Suffix": "MB",
            "Lower-Help": "The value it must be greater than this number of megabytes",
            "Upper": "Upper",
            "Upper-Suffix": "MB",
            "Upper-Help": "The value it must be less than than this number of megabytes. Leave as 0 to not test the upper limit."
          }
        },
        "Function": {
          "Fields": {
            "Outputs": "Outputs",
            "Outputs-Help": "The number of outputs this node can have.",
            "Code": "Code",
            "Code-Help": "return -1 for error and flow to stop\nreturn 0 for flow to complete\nreturn 1 or more for the desired output to be called"
          }
        },
        "Log": {
          "Description": "Logs a message to the flow log",
          "Fields": {
            "LogType": "Type",
            "Message": "Message"
          }
        },
        "MoveFile": {
          "Description": "Moves a file to the destination path",
          "Fields": {
            "DestinationPath": "Destination Path",
            "DestinationPath-Help": "The path where the file will be moved too",
            "MoveFolder": "Copy Folder",
            "MoveFolder-Help": "If the relative library folder structure should be copied too",
            "DeleteOriginal": "Delete Original",
            "DeleteOriginal-Help": "If the original file should be deleted, this will only happen if the working file is different to the original file"
          }
        },
        "PatternMatch": {
          "Description": "Tests the working file and original file against a regular expression.\n\nOutput 1: Matches expression\nOutput 2: Does not match",
          "Fields": {
            "Pattern": "Pattern",
            "Pattern-Help": "A regular expression, using the C# specification for regular expressions."
          }
        },
        "PatternReplacer": {
          "Description": "Lets you make replacements in the filename.  Can use regular expressions for replacements, or simple string replacements.\n\nOutput 1: Replacement done\nOutput 2: No replacement done",
          "Fields": {
            "Replacements": "Replacements",
            "ReplacementsKey": "Pattern",
            "ReplacementsValue": "Value",
            "UseWorkingFileName": "Use Working Filename",
            "UseWorkingFileName-Help": "If current working filename should be used, or if false, the original filename of the incoming file will be used."
          }
        },
        "ReplaceOriginal": {
          "Description": "Replaces the original file with the working file.\n\nIf the extension is different on the working file, the original file will be deleted and the working file will be moved to the original with the new extension.\nE.g. from File.avi to File.mkv"
        },
        "Renamer": {
          "Description": "Renames the working file.\nVariables can be used by entering the key '{' inside the Pattern field.",
          "Fields": {
            "Pattern": "Pattern",
            "DestinationPath": "Destination Path",
            "DestinationPath-Help": "If the file should be moved to a different directory.",
            "LogOnly": "Log Only",
            "LogOnly-Help": "Turn on if you just want to test this node without it actually renaming the file",
            "CsvFile": "CSV File",
            "CsvFile-Help": "Will append to this file the original name and the renamed file.  Useful when using ''Log Only'' to test the renamer before changing files."
          }
        }
      }
    }
}