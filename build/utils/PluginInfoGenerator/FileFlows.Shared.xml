<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileFlows.Shared</name>
    </assembly>
    <members>
        <member name="T:FileFlows.Shared.Converter">
            <summary>
            A class used to convert objects from one type to another
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Converter.ConvertObject(System.Type,System.Object)">
            <summary>
            Converts an object to a specific type
            </summary>
            <param name="type">The type to convert to</param>
            <param name="value">The object to convert</param>
            <returns>The converted object</returns>
        </member>
        <member name="M:FileFlows.Shared.Converter.ChangeListToArray``1(System.Collections.IEnumerable,System.Type)">
            <summary>
            Converts a IEnumeable to an array
            </summary>
            <param name="value">The IEnumerable to convert</param>
            <param name="valueType">The type of array to create</param>
            <typeparam name="T">the type of the array to create</typeparam>
            <returns>An array of the IEnumerable</returns>
        </member>
        <member name="M:FileFlows.Shared.Converter.ChangeListToArray(System.Type,System.Collections.IEnumerable,System.Type)">
            <summary>
            Converts a IEnumeable to an list
            </summary>
            <param name="value">The IEnumerable to convert</param>
            <param name="valueType">The type of array to create</param>
            <typeparam name="T">the type of the array to create</typeparam>
            <returns>An list of the IEnumerable</returns>
        </member>
        <member name="T:FileFlows.Shared.OperatingSystemType">
            <summary>
            A list of types of operating systems
            </summary>
        </member>
        <member name="F:FileFlows.Shared.OperatingSystemType.Unknown">
            <summary>
            Unknown operating system
            </summary>
        </member>
        <member name="F:FileFlows.Shared.OperatingSystemType.Windows">
            <summary>
            Windows operating system
            </summary>
        </member>
        <member name="F:FileFlows.Shared.OperatingSystemType.Linux">
            <summary>
            Linux operating system
            </summary>
        </member>
        <member name="F:FileFlows.Shared.OperatingSystemType.Mac">
            <summary>
            Mac/Apple operating system
            </summary>
        </member>
        <member name="T:FileFlows.Shared.FlowType">
            <summary>
            A type of Flow
            </summary>
        </member>
        <member name="F:FileFlows.Shared.FlowType.Standard">
            <summary>
            A standard flow
            </summary>
        </member>
        <member name="F:FileFlows.Shared.FlowType.Failure">
            <summary>
            A special flow that is executed when a flow fails during execution
            </summary>
        </member>
        <member name="T:FileFlows.Shared.ProcessingLibraries">
            <summary>
            The available processing libraries options
            </summary>
        </member>
        <member name="F:FileFlows.Shared.ProcessingLibraries.Only">
            <summary>
            Only process the libraries specified
            </summary>
        </member>
        <member name="F:FileFlows.Shared.ProcessingLibraries.All">
            <summary>
            Process all libraries
            </summary>
        </member>
        <member name="F:FileFlows.Shared.ProcessingLibraries.AllExcept">
            <summary>
            Process all libraries except those specified
            </summary>
        </member>
        <member name="T:FileFlows.Shared.ExtensionMethods">
            <summary>
            Extension methods used by FileFlows
            </summary>
        </member>
        <member name="M:FileFlows.Shared.ExtensionMethods.ToJson(System.Object)">
            <summary>
            Converts an object to a json string
            </summary>
            <param name="o">the object to convert</param>
            <returns>the object as json, or empty if object was null</returns>
        </member>
        <member name="M:FileFlows.Shared.ExtensionMethods.EmptyAsNull(System.String)">
            <summary>
            Returns an empty string as null, otherwise returns the original string
            </summary>
            <param name="str">the input string</param>
            <returns>the string or null if empty</returns>
        </member>
        <member name="M:FileFlows.Shared.ExtensionMethods.TryMatch(System.Text.RegularExpressions.Regex,System.String,System.Text.RegularExpressions.Match@)">
            <summary>
            Tries to find a match 
            </summary>
            <param name="regex">The regex to use to find the match</param>
            <param name="input">The input string to find the match in</param>
            <param name="match">The match if found</param>
            <returns>true if found, false otherwise</returns>
        </member>
        <member name="M:FileFlows.Shared.ExtensionMethods.ToLowerExplicit(System.String)">
            <summary>
            Lower cases UPPER case characters, but does not touch umlauts etc
            </summary>
            <param name="input">the string to lowercase</param>
            <returns>the lowercased string</returns>
        </member>
        <member name="T:FileFlows.Shared.Formatters.FileSizeFormatter">
            <summary>
            Formatter used to format bytes to a file size string 
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Formatters.FileSizeFormatter.Format(System.Object)">
            <summary>
            Formats a value as a file size
            </summary>
            <param name="value">the value to format</param>
            <returns>the value as a file size</returns>
        </member>
        <member name="F:FileFlows.Shared.Formatters.FileSizeFormatter.sizes">
            <summary>
            The sizable units
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Formatters.FileSizeFormatter.Format(System.Double)">
            <summary>
            Formats a byte value as a string
            </summary>
            <param name="size">The size in bytes</param>
            <returns>The size in a formatted string</returns>
        </member>
        <member name="T:FileFlows.Shared.Formatters.Formatter">
            <summary>
            A formatter will format an object as a string 
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Formatters.Formatter._formatters">
            <summary>
            A list of available formatter instances
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Formatters.Formatter.Format(System.Object)">
            <summary>
            Formats a value
            </summary>
            <param name="value">the value to format</param>
            <returns>the formatted value</returns>
        </member>
        <member name="M:FileFlows.Shared.Formatters.Formatter.Format(System.String,System.Object)">
            <summary>
            Formats a value 
            </summary>
            <param name="formatter">the formatter to use</param>
            <param name="value">the value to format</param>
            <returns>the formatted value</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.HttpHelper">
            <summary>
            A helper for HTTP processing of requests
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Helpers.HttpHelper.Client">
            <summary>
            Gets or sets the HTTP Client used
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Helpers.HttpHelper.Logger">
            <summary>
            Gets or sets the logger used
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Get``1(System.String)">
            <summary>
            Performs a GET request
            </summary>
            <typeparam name="T">the type of object returned by the request</typeparam>
            <param name="url">the URL to call</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Get``1(System.String,System.Int32,System.Boolean)">
            <summary>
            Performs a GET request
            </summary>
            <typeparam name="T">the type of object returned by the request</typeparam>
            <param name="url">the URL to call</param>
            <param name="timeoutSeconds">the number of seconds before a timeout occurs</param>
            <param name="noLog">if no logging should be done for this request</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Post(System.String,System.Object,System.Boolean)">
            <summary>
            Performs a POST request
            </summary>
            <param name="url">the URL to call</param>
            <param name="data">any data to send with the request</param>
            <param name="noLog">if no logging should be done for this request</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Post``1(System.String,System.Object,System.Int32)">
            <summary>
            Performs a POST request
            </summary>
            <typeparam name="T">the type of object returned by the request</typeparam>
            <param name="url">the URL to call</param>
            <param name="data">any data to send with the request</param>
            <param name="timeoutSeconds">the number of seconds before a timeout occurs</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Put(System.String,System.Object)">
            <summary>
            Performs a PUT request
            </summary>
            <param name="url">the URL to call</param>
            <param name="data">any data to send with the request</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Put``1(System.String,System.Object)">
            <summary>
            Performs a PUT request
            </summary>
            <typeparam name="T">the type of object returned by the request</typeparam>
            <param name="url">the URL to call</param>
            <param name="data">any data to send with the request</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Delete(System.String,System.Object)">
            <summary>
            Perform a DELETE request
            </summary>
            <param name="url">the URL to call</param>
            <param name="data">any data to send with the request</param>
            <returns>the request result</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.DownloadFile(System.String,System.String)">
            <summary>
            Downloads a file from a URL
            </summary>
            <param name="url">the URL of the download</param>
            <param name="destination">where the download should be saved</param>
            <exception cref="T:System.Exception">throws if the file fails to download</exception>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.Log(System.String,System.Boolean)">
            <summary>
            Logs a message to the log
            </summary>
            <param name="message">the message to log</param>
            <param name="error">if the message is an error message or info</param>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.MakeRequest``1(System.Net.Http.HttpMethod,System.String,System.Object,System.Int32,System.Boolean)">
            <summary>
            Makes a HTTP Request
            </summary>
            <param name="method">The request method</param>
            <param name="url">The URL of the request</param>
            <param name="data">Any data to be sent with the request</param>
            <param name="timeoutSeconds">the number of seconds to wait before a timeout</param>
            <param name="noLog">if the request show record nothing to the log</param>
            <typeparam name="T">The request object returned</typeparam>
            <returns>a processing result of the request</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.HttpHelper.AsJson(System.Object)">
            <summary>
            Converts an object to a json string content result
            </summary>
            <param name="o">the object to convert</param>
            <returns>the object as a json string content</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.LogToHtml">
            <summary>
            Utility to convert a plain text log to a colorized HTML log
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.LogToHtml.Convert(System.String)">
            <summary>
            Converts a plain text log to a HTML log
            </summary>
            <param name="log">the plain text log</param>
            <returns>an HTML version of the log</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.LogToHtml.ColorizeSection(System.String)">
            <summary>
            Colorizes a section and converts to HTML
            </summary>
            <param name="section">The section to colorize</param>
            <returns>the colorized string</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.LogToHtml.HtmlEncode(System.String)">
            <summary>
            HTML encodes a string
            </summary>
            <param name="input">the string to encode</param>
            <returns>the HTML encoded string</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.ObjectCloner">
            <summary>
            Clones an object
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ObjectCloner.Clone``1(``0)">
            <summary>
            Clones an object
            </summary>
            <param name="original">the object to clone</param>
            <typeparam name="T">the object type to clone</typeparam>
            <returns>a cloned instance</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ObjectCloner.Clone(System.Object)">
            <summary>
            Clones an object
            </summary>
            <param name="originalObject">the object to clone</param>
            <returns>A cloned instance</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.ReferenceEqualityComparer">
            <summary>
            Checks if objects are teh same reference
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
            <summary>
            Checks if two objects are equal
            </summary>
            <param name="x">first object</param>
            <param name="y">second object</param>
            <returns>If the objects are ruqla</returns>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ReferenceEqualityComparer.GetHashCode(System.Object)">
            <summary>
            Gets a hashcode of an object
            </summary>
            <param name="obj">the object</param>
            <returns>the objec hashcode</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.ArrayExtensions.ArrayExtensions">
            <summary>
            Array extensions
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ArrayExtensions.ArrayExtensions.ForEach(System.Array,System.Action{System.Array,System.Int32[]})">
            <summary>
            Method to perform a foreach
            </summary>
            <param name="array">the array to foreach</param>
            <param name="action">the action to perform on each item</param>
        </member>
        <member name="T:FileFlows.Shared.Helpers.ArrayExtensions.ArrayTraverse">
            <summary>
            Array transverse
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Helpers.ArrayExtensions.ArrayTraverse.Position">
            <summary>
            Array positional indexes
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ArrayExtensions.ArrayTraverse.#ctor(System.Array)">
            <summary>
            Transfers an array
            </summary>
            <param name="array">the array to transverse</param>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ArrayExtensions.ArrayTraverse.Step">
            <summary>
            Step to the next item in the array
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="T:FileFlows.Shared.Helpers.ObjectHelper">
            <summary>
            Generic helper methods for objecst
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Helpers.ObjectHelper.ObjectsAreSame(System.Object,System.Object)">
            <summary>
            Tests if two objects are logically the same
            </summary>
            <param name="a">The first object to test</param>
            <param name="b">The second object to test</param>
            <returns>true if the objects are logically the same</returns>
        </member>
        <member name="T:FileFlows.Shared.Json.ValidatorConverter">
            <summary>
            JSON Convert for validators
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Json.ValidatorConverter.CanConvert(System.Type)">
            <summary>
            Tests if an object type can be converted
            </summary>
            <param name="typeToConvert">the type to test</param>
            <returns>true if can be converted, otherwise false</returns>
        </member>
        <member name="M:FileFlows.Shared.Json.ValidatorConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read and convert the JSON to T.
            </summary>
            <remarks>
            A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON is invalid.
            </remarks>
            <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader"/> to read from.</param>
            <param name="typeToConvert">The <see cref="T:System.Type"/> being converted.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used.</param>
            <returns>The value that was converted.</returns>
            <remarks>Note that the value of <seealso cref="!:HandleNull"/> determines if the converter handles null JSON tokens.</remarks>
        </member>
        <member name="M:FileFlows.Shared.Json.ValidatorConverter.Write(System.Text.Json.Utf8JsonWriter,FileFlows.Shared.Validators.Validator,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write the value as JSON.
            </summary>
            <remarks>
            A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON
            cannot be created.
            </remarks>
            <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter"/> to write to.</param>
            <param name="value">The value to convert. Note that the value of <seealso cref="!:HandleNull"/> determines if the converter handles <see langword="null" /> values.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used.</param>
        </member>
        <member name="T:FileFlows.Shared.LanguageConverter">
            <summary>
            Converter used when flattening a Language json file to Dictionary
            </summary>
        </member>
        <member name="M:FileFlows.Shared.LanguageConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write the value as JSON.
            </summary>
            <remarks>
            A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON
            cannot be created.
            </remarks>
            <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter"/> to write to.</param>
            <param name="value">The value to convert. Note that the value of <seealso cref="!:HandleNull"/> determines if the converter handles <see langword="null" /> values.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used.</param>
        </member>
        <member name="M:FileFlows.Shared.LanguageConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read and convert the JSON to T.
            </summary>
            <remarks>
            A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON is invalid.
            </remarks>
            <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader"/> to read from.</param>
            <param name="typeToConvert">The <see cref="T:System.Type"/> being converted.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used.</param>
            <returns>The value that was converted.</returns>
            <remarks>Note that the value of <seealso cref="!:HandleNull"/> determines if the converter handles null JSON tokens.</remarks>
        </member>
        <member name="M:FileFlows.Shared.LanguageConverter.CreateDictionary">
            <summary>
            Creates an IDictionary instance
            </summary>
            <returns>an IDictionary instance</returns>
        </member>
        <member name="T:FileFlows.Shared.Logger">
            <summary>
            A logger used to write log messages 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Logger.Instance">
            <summary>
            Gets or sets the instance of ILogger
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ElementField">
            <summary>
            An element field is a UI component that is displayed in the web browser
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Order">
            <summary>
            Gets or sets the order of which to display this filed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Type">
            <summary>
            Gets or sets the type of this field 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Name">
            <summary>
            Gets or sets the name of this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Placeholder">
            <summary>
            Gets or sets optional place holder text, this can be a translation key
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Description">
            <summary>
            Gets or sets the description of the element, if this is set, this will be used instead of the HelpHint
            Note: this is used by the Script which the user defines the description for
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.InputType">
            <summary>
            Gets or sets the input type of this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.UiOnly">
            <summary>
            Gets or sets if this field is only only a UI field
            and value will not be saved
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Variables">
            <summary>
            Gets or sets the variables {} available to this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Parameters">
            <summary>
            Gets or sets the parameters of the field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.ChangeValues">
            <summary>
            Gets a list of change values for this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Validators">
            <summary>
            Gets or sets the validators for the field
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ElementField.ValueChangedEvent">
            <summary>
            A delegate used when a value change event
            </summary>
        </member>
        <member name="E:FileFlows.Shared.Models.ElementField.ValueChanged">
            <summary>
            A event that is raised when the value changes
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ElementField.DisabledChangeEvent">
            <summary>
            A delegate used for the disabled change event
            </summary>
        </member>
        <member name="E:FileFlows.Shared.Models.ElementField.DisabledChange">
            <summary>
            An event that is raised when the disable state of the field is changed
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ElementField.ConditionsChangeEvent">
            <summary>
            A delegate for when the conditions of the field changes
            </summary>
        </member>
        <member name="E:FileFlows.Shared.Models.ElementField.ConditionsChange">
            <summary>
            An event that is raised when the conditions of the field changes
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.ElementField.InvokeValueChanged(System.Object,System.Object)">
            <summary>
            Invokes the value changed event
            </summary>
            <param name="sender">The sender of the invoker</param>
            <param name="value">The value to invoke</param>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.DisabledConditions">
            <summary>
            Gets or sets the conditions used to disable this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ElementField.Conditions">
            <summary>
            Gets or sets the conditions used to show this field
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.ElementField.InvokeChange(FileFlows.Shared.Models.Condition,System.Boolean)">
            <summary>
            Invokes a condition
            </summary>
            <param name="condition">the condition to invokte</param>
            <param name="state">the condition state</param>
        </member>
        <member name="T:FileFlows.Shared.Models.Condition">
            <summary>
            A condition that determines if a element field is shown or disabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.Field">
            <summary>
            Get or sets the Field this condition is attached to
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.Property">
            <summary>
            Gets or sets the property this condition evaluates
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.Value">
            <summary>
            Gets or sets the value used to when evaluating the condition
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.IsNot">
            <summary>
            Gets or sets if the match is inversed, ie is not the value
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.IsMatch">
            <summary>
            Gets or sets if this condition is a match
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Condition.Owner">
            <summary>
            Gets or sets the owner who owns this conditoin
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.Condition.#ctor">
            <summary>
            Constructs a condition
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.Condition.#ctor(FileFlows.Shared.Models.ElementField,System.Object,System.Object,System.Boolean)">
            <summary>
            Constructs a condition
            </summary>
            <param name="field">the field the condition is attached to</param>
            <param name="initialValue">the initial value of the field</param>
            <param name="value">the value to evaluate for</param>
            <param name="isNot">if the condition should NOT match the value</param>
        </member>
        <member name="M:FileFlows.Shared.Models.Condition.SetField(FileFlows.Shared.Models.ElementField,System.Object)">
            <summary>
            Sets the field 
            </summary>
            <param name="field">the field</param>
            <param name="initialValue">the fields initial value</param>
        </member>
        <member name="M:FileFlows.Shared.Models.Condition.Field_ValueChanged(System.Object,System.Object)">
            <summary>
            Fired when the field value changes
            </summary>
            <param name="sender">the sender object</param>
            <param name="value">the new field value</param>
        </member>
        <member name="M:FileFlows.Shared.Models.Condition.Matches(System.Object)">
            <summary>
            Test if the condition matches the given object value
            </summary>
            <param name="value">the value to test the condition against</param>
            <returns>true if the condition is matches</returns>
        </member>
        <member name="T:FileFlows.Shared.Models.EmptyCondition">
            <summary>
            Condition to test if a field is empty
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.EmptyCondition.#ctor(FileFlows.Shared.Models.ElementField,System.Object)">
            <summary>
            Constructs a empty condition
            </summary>
            <param name="field">the field this condition is attached to</param>
            <param name="initialValue">the initial value of the field</param>
        </member>
        <member name="M:FileFlows.Shared.Models.EmptyCondition.Matches(System.Object)">
            <summary>
            Test if the condition matches the given object value
            </summary>
            <param name="value">the value to test the condition against</param>
            <returns>true if the condition is matches</returns>
        </member>
        <member name="T:FileFlows.Shared.Models.ChangeValue">
            <summary>
            Changes a value when the conditions are met
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.Field">
            <summary>
            Get or sets the Field this condition is attached to
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.Property">
            <summary>
            Gets or sets the property to change
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.Value">
            <summary>
            Gets or sets the value to set in the property
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.WhenValue">
            <summary>
            Gets or sets when to change the value, when this value equals a value
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.WhenValueIsNot">
            <summary>
            Gets or sets if the value should be set when this value does not equal the WhenValue
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ChangeValue.Owner">
            <summary>
            Gets or sets the owner who owns this condition
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.ChangeValue.#ctor">
            <summary>
            Constructs a condition
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.ChangeValue.#ctor(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            Constructs a change value
            </summary>
            <param name="property">the property to change</param>
            <param name="value">the value to set in the property</param>
            <param name="whenValue">when to change the value, when this value equals a value</param>
            <param name="whenValueIsNot">the value should be set when this value does not equal the WhenValue</param>
        </member>
        <member name="M:FileFlows.Shared.Models.ChangeValue.Matches(System.Object)">
            <summary>
            Test if the change value condition matches the given object value
            </summary>
            <param name="value">the value of the field</param>
            <returns>true if the condition is matches</returns>
        </member>
        <member name="T:FileFlows.Shared.Models.FileBrowserItem">
            <summary>
            An item in the file browser
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileBrowserItem.Name">
            <summary>
            Gets or sets the short name of an item in the file browser
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileBrowserItem.FullName">
            <summary>
            Gets or sets the fullname of the item
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileBrowserItem.IsPath">
            <summary>
            Gets or sets if the item is a path
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileBrowserItem.IsParent">
            <summary>
            Gets or sets if the item is a parent item
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileBrowserItem.IsDrive">
            <summary>
            Gets or sets if the item is a drive
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FileFlowObject">
            <summary>
            A file flow object
            This is the base object for all database objects
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileFlowObject.Uid">
            <summary>
            Gets or sets the UID of the item
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileFlowObject.Name">
            <summary>
            Gets or sets the name of the item
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileFlowObject.DateCreated">
            <summary>
            Gets or sets the date this item was created
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FileFlowObject.DateModified">
            <summary>
            Gets or sets the date this item was last modified
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.IUniqueObject">
            <summary>
            Interface used for unique objects.
            This mean only one object of this type can exist in the database
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.IUniqueObject.Uid">
            <summary>
            Gets or sets the UID of the item
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Flow">
            <summary>
            A flow 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Flow.Enabled">
            <summary>
            Gets or sets if the flow is enabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Flow.Description">
            <summary>
            Gets or sets the description of the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Flow.Type">
            <summary>
            Gets or sets the type of flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Flow.Template">
            <summary>
            Gets or sets the template this flow is based on
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Flow.Parts">
            <summary>
            Gets or sets the parts of this flow
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowTemplateModel">
            <summary>
            A model for a flow templates
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowTemplateModel.Flow">
            <summary>
            Gets or sets the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowTemplateModel.Fields">
            <summary>
            Gets or sets fields used in the template
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowTemplateModel.Order">
            <summary>
            Gets or sets the order this template appears
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowTemplateModel.Save">
            <summary>
            Gets or sets if this flow template should be saved after creation
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowTemplateModel.Type">
            <summary>
            Gets or sets the type of flow
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.TemplateField">
            <summary>
            A field used in templates
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Uid">
            <summary>
            Gets or sets the UID of the template field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Type">
            <summary>
            Gets or sets the type of the field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Required">
            <summary>
            Gets or sets if this field is required
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Name">
            <summary>
            Gets or sets the name of this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Label">
            <summary>
            Gets or sets the label for this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Help">
            <summary>
            Gets or sets the help text for this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Default">
            <summary>
            Gets or sets the default value for this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Value">
            <summary>
            Gets or sets the value of this field
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.TemplateField.Parameters">
            <summary>
            Gets or sets the parameters for this field
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowElement">
            <summary>
            A flow element/node is a element that is a part of the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Uid">
            <summary>
            Gets or sets the UID of the element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Name">
            <summary>
            Gets or sets the name of the element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Description">
            <summary>
            Gets or sets a description for this element, only used by scripts where the description is user defined 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.DisplayName">
            <summary>
            Gets or sets the display name of the element
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.FlowElement.FormatName(System.String)">
            <summary>
            Formats the name and translated if needed
            </summary>
            <param name="name">the name to format</param>
            <returns>the formateted name</returns>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Icon">
            <summary>
            Gets or sets the icon of the element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Variables">
            <summary>
            Gets or sets any variables this element exports
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.NoEditorOnAdd">
            <summary>
            Gets or sets if no editor should be shown to the user when first adding this element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Inputs">
            <summary>
            Gets or sets the number of inputs this element has
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Outputs">
            <summary>
            Gets or sets the number of outputs this element has
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.HelpUrl">
            <summary>
            Gets or sets the url to the the help page for this node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Type">
            <summary>
            Gets or sets the type of flow element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.FailureNode">
            <summary>
            Gets or sets if this element is available to failure flows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Group">
            <summary>
            Gets or sets the group this element belongs to
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.OutputLabels">
            <summary>
            Gets or sets the output labels for this element
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Fields">
            <summary>
            Gets or sets the fields this element has
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowElement.Model">
            <summary>
            Gets or sets the model for this element
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowExecutorInfo">
            <summary>
            Information used during the flow execution 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.Uid">
            <summary>
            Gets or sets the UID of the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.NodeUid">
            <summary>
            Gets or sets the UID of the node execution this flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.NodeName">
            <summary>
            Gets or sets the name of the Node executing this flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.Log">
            <summary>
            Gets or sets the executing log for of the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.LibraryFile">
            <summary>
            Gets or sets the library file being executed 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.RelativeFile">
            <summary>
            Gets or sets the relative file being executed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.Library">
            <summary>
            Gets or sets an object reference of the library
            that the library file belongs
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.LibraryPath">
            <summary>
            Gets or sets the path of the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.Fingerprint">
            <summary>
            Gets or sets if a fingerprint should be taken of the final file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.InitialSize">
            <summary>
            Gets or sets the size of the original file being processed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.WorkingFile">
            <summary>
            Gets or sets the file that is currently being worked on/executed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.IsDirectory">
            <summary>
            Gets or sets if the working file is actually a directory
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.TotalParts">
            <summary>
            Gets or sets the total parts in the flow that is executing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.CurrentPart">
            <summary>
            Gets or sets the index of the flow part that is currently executing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.CurrentPartName">
            <summary>
            Gets or sets the name of the flow part that is currently executing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.CurrentPartPercent">
            <summary>
            Gets or sets the current percent of the executing flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.LastUpdate">
            <summary>
            Gets or sets when the last update was reported to the server
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.StartedAt">
            <summary>
            Gets or sets when the flow execution started
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowExecutorInfo.ProcessingTime">
            <summary>
            Gets the total processing time of the flow
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowPart">
            <summary>
            A flow part is a part/node of a flow that exeuctes
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Uid">
            <summary>
            Gets or sets the UID of the flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Name">
            <summary>
            Gets or sets the name of the flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.FlowElementUid">
            <summary>
            Gets or sets the FlowElementUid this flow part is an instance of
            This is the full name of the flow element, Namespace.TypeName
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.xPos">
            <summary>
            Gets or sets the x coordinate where this part appears on the canvas
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.yPos">
            <summary>
            Gets or sets the y coordinate where this part appears on the canvas
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Icon">
            <summary>
            Gets or sets the icon of the flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Label">
            <summary>
            Gets or sets the label of this flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Inputs">
            <summary>
            Gets or sets the number of inputs this part has
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Outputs">
            <summary>
            Gets or sets the number of outputs this part has
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.OutputConnections">
            <summary>
            Gets or sets the output connections of this flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Type">
            <summary>
            Gets or sets the type of the flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowPart.Model">
            <summary>
            Gets or sets the model of this flow part
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowConnection">
            <summary>
            A flow connection connects the input of a node to the output of another node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowConnection.Input">
            <summary>
            Gets or sets the Input number of the connecting node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowConnection.Output">
            <summary>
            Gets or sets the Output number of the connecitng node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowConnection.InputNode">
            <summary>
            Gets or sets the UID of input node this connection connects to
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FlowWorkerStatus">
            <summary>
            Flow worker status detailing information about a currently executing flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.Uid">
            <summary>
            Gets or sets the a unique id for this flow executor.
            This is used so the flow can be cancelled and will be uniquely
            generated when the flow starts
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.CurrentFile">
            <summary>
            Gets or sets the current file being processed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.RelativeFile">
            <summary>
            Gets or sets the relative file of the executing file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.Library">
            <summary>
            Gets or sets an object reference of the library
            where the currently executing file belongs
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.CurrentUid">
            <summary>
            Gets or sets the current flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.WorkingFile">
            <summary>
            Gets or sets the current workign file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.Status">
            <summary>
            Gets the current process status
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.TotalParts">
            <summary>
            Gets or sets the total parts of the flow
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.CurrentPart">
            <summary>
            Gets or sets the index of current flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.CurrentPartName">
            <summary>
            Gets or sets the name of the current flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.CurrentPartPercent">
            <summary>
            Gets or sets the percentage of the currently executing flow part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.StartedAt">
            <summary>
            Gets or sets when this flow was started
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.FlowWorkerStatus.ProcessingTime">
            <summary>
            Gets the current total processing time of the flow
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ProcessStatus">
            <summary>
            The processing status
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessStatus.Waiting">
            <summary>
            Waiting to be processed
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessStatus.Processing">
            <summary>
            Processing a file/folder
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.LibaryFileListModel">
            <summary>
            A model of the library file used in the UI
            This model is used to reduce the data sent to the client browser
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Uid">
            <summary>
            Gets or sets the UID of the library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Name">
            <summary>
            Gets or sets the name of the library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.RelativePath">
            <summary>
            Gets or sets the relative path of the file
            This is the fullname of the file without the library path
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Duplicate">
            <summary>
            Gets or sets a name of a file this is a duplicate of
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.FinalSize">
            <summary>
            Gets or sets the final size of the file after processing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Flow">
            <summary>
            Gets or sets the name of the flow that executed this file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Library">
            <summary>
            Gets or sets the name of the library this file belongs
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.Node">
            <summary>
            Gets or sets the name of the processing node that is executing/executed this file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.OriginalSize">
            <summary>
            Gets or sets the size of the original library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.OutputPath">
            <summary>
            Gets or sets the output path of the final file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibaryFileListModel.ProcessingTime">
            <summary>
            Gets or sets the processing time taken of the file
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Library">
            <summary>
            A library that FileFlows will monitor for files to process
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Enabled">
            <summary>
            Gets or sets if this library is enabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Path">
            <summary>
            Gets or sets the path of the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Filter">
            <summary>
            Gets or sets the filter used to determine what files to add ot the library files
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Template">
            <summary>
            Gets or sets the template this library is based on
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Description">
            <summary>
            Gets or sets the description of the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Flow">
            <summary>
            Gets or sets the flow this library uses
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Scan">
            <summary>
            Gets or sets if this library should be routinely scanned,
            or if false, will listen for file system events.
            If off the library will still be fully scanned every other hour
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Folders">
            <summary>
            If this library monitors for folders or files
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.UseFingerprinting">
            <summary>
            Gets or sets if this library will use fingerprinting to determine if a file already is known
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.WaitTimeSeconds">
            <summary>
            Gets or sets the number of seconds that have to pass between changes to the folder for it to be scanned into the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.ExcludeHidden">
            <summary>
            Gets or sets if hidden files and folders should be excluded from the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Schedule">
            <summary>
            Gets or sets the schedule for this library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.LastScanned">
            <summary>
            When the library was last scanned
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.ReprocessRecreatedFiles">
            <summary>
            Gets or sets if recreated files (files with a different creation time) should be automatically reprocessed
            This is helpful if you download the same file multiple times and want to reprocess it again
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.LastScannedAgo">
            <summary>
            The timespan of when this was last scanned
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.ScanInterval">
            <summary>
            Gets or sets the number of seconds to scan files
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.FileSizeDetectionInterval">
            <summary>
            Gets or sets the number of seconds to wait before checking for file size changes when scanning the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Library.Priority">
            <summary>
            Gets or sets the processing priority of this library
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ProcessingPriority">
            <summary>
            Processing priority, used to prioritize library files for processing
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingPriority.Lowest">
            <summary>
            Lowest priority
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingPriority.Low">
            <summary>
            Low priority
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingPriority.Normal">
            <summary>
            Normal priority
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingPriority.High">
            <summary>
            High priority
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingPriority.Highest">
            <summary>
            Highest priority
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.LibraryFile">
            <summary>
            A library file is a file that FileFlows will process
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.RelativePath">
            <summary>
            Gets or sets the relative path of the library file.
            This is the path relative to the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.OutputPath">
            <summary>
            Gets or sets the path of the final output file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Flow">
            <summary>
            Gets or sets the flow that executed this file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.ExecutedNodes">
            <summary>
            Gets or sets a list of nodes that were executed against this library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Library">
            <summary>
            Gets or sets the library this library files belongs to
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Duplicate">
            <summary>
            Gets or sets an object reference to an existing
            library file that this file is a duplicate of
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.OriginalSize">
            <summary>
            Gets or sets the size of the original library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.FinalSize">
            <summary>
            Gets or sets the size of the final file after processing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Fingerprint">
            <summary>
            Gets or sets the fingerprint of the file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Node">
            <summary>
            Gets or sets the node tha this processing/has processed the file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.WorkerUid">
            <summary>
            Gets or sets the UID of the worker that is executing this library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.ProcessingStarted">
            <summary>
            Gets or sets when the file began processing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.ProcessingEnded">
            <summary>
            Gets or sets when the file finished processing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Status">
            <summary>
            Gets or sets the processing status of the file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.Order">
            <summary>
            Gets or sets the order of the file when the file should be processed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.IsDirectory">
            <summary>
            Gets or sets if this library file is a directory
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.ProcessingTime">
            <summary>
            Gets the total processing time of the library file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.CreationTime">
            <summary>
            Gets or sets when the file was created
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFile.LastWriteTime">
            <summary>
            Gets or sets when the file was written to
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.FileStatus">
            <summary>
            Possible status of library files
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.Disabled">
            <summary>
            The library is disabled and the file will not be processed
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.OutOfSchedule">
            <summary>
            The library is out of schedule and will not process until it is in the processing schedule
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.Unprocessed">
            <summary>
            The file has not been processed
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.Processed">
            <summary>
            The file has been successfully processed
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.Processing">
            <summary>
            The file is currently processing
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.FlowNotFound">
            <summary>
            The file cannot be processed as the flow configured for the library can not be found
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.ProcessingFailed">
            <summary>
            THe file was processed, but exited with a failure
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.Duplicate">
            <summary>
            The file is a duplicate of an existing library file
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.FileStatus.MappingIssue">
            <summary>
            The file could not be processed due to a mapping issue
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ExecutedNode">
            <summary>
            A node/flow part that has been executed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNode.NodeName">
            <summary>
            Gets or sets the name of the node part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNode.NodeUid">
            <summary>
            Gets or sets the UID of the node part
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNode.ProcessingTime">
            <summary>
            Gets or sets the time it took to process this node 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNode.Output">
            <summary>
            Gets or sets the output from this node
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.LibraryFileDatalistModel">
            <summary>
            Model class for the Library Files page
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFileDatalistModel.LibraryFiles">
            <summary>
            Gets or sets a list of library files to show in the UI
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryFileDatalistModel.Status">
            <summary>
            Gets or sets the status data for the libraries
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.LibraryStatus">
            <summary>
            Library status
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryStatus.Name">
            <summary>
            Gets or sets the name of the status
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryStatus.Status">
            <summary>
            Gets or sets the file status
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.LibraryStatus.Count">
            <summary>
            Gets or sets the number of library files in this status
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.NextLibraryFileArgs">
            <summary>
            Arguments for hte Next Library File request
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.NextLibraryFileArgs.NodeName">
            <summary>
            Gets or sets the name of the node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.NextLibraryFileArgs.NodeUid">
            <summary>
            Gets or sets the Uid of the node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.NextLibraryFileArgs.NodeVersion">
            <summary>
            Gets or sets the Version of the node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.NextLibraryFileArgs.WorkerUid">
            <summary>
            Gets or sets the worker UID
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.PluginInfo">
            <summary>
            Information about a plugin in FileFlows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Enabled">
            <summary>
            Gets or sets if the plugin is enabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Version">
            <summary>
            Gets or sets the plugin version
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Deleted">
            <summary>
            Gets or sets if the plugin is deleted
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.HasSettings">
            <summary>
            Gets or sets if this plugin has settings
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Url">
            <summary>
            Gets or sets the URL of this plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Authors">
            <summary>
            Gets or sets the authors of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Description">
            <summary>
            Gets or sets the description of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.MinimumVersion">
            <summary>
            Gets or sets the minimum version of FileFlows this plugin requires
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.PackageName">
            <summary>
            Gets or sets the name of the package of this plugin.
            The packages name is the .ffplugin file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Settings">
            <summary>
            Gets or sets a list of settings elements used to construct the settings form
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfo.Elements">
            <summary>
            Gets or sets a list of elements/flowparts/nodes this plugin has
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.PluginInfoModel">
            <summary>
            Gets or sets the model for plugin info
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfoModel.LatestVersion">
            <summary>
            Gets or sets the latest version of this plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginInfoModel.UpdateAvailable">
            <summary>
            Gets if there is an update available for this plugin
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.PluginPackageInfo">
            <summary>
            Information about a plugin package
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Name">
            <summary>
            Gets or sets the name of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Version">
            <summary>
            Gets or sets the version of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Authors">
            <summary>
            Gets or sets the authors of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Url">
            <summary>
            Gets or sets the URL for the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Description">
            <summary>
            Gets or sets the description of the plugin
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Package">
            <summary>
            Gets or sets the package name of the plugin
            The .ffplugin file
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.MinimumVersion">
            <summary>
            Gets or sets the minimum FileFlows version this plugin needs
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.PluginPackageInfo.Elements">
            <summary>
            Gets or sets the available flow elements/node in this plugin
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ProcessingNode">
            <summary>
            A processing node used by FileFlows to process Library Files
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.TempPath">
            <summary>
            Gets or sets the temporary path used by this node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Address">
            <summary>
            Gets or sets the address this node is located at, hostname or ip address
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Enabled">
            <summary>
            Gets or sets if this node is enabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.OperatingSystem">
            <summary>
            Gets or sets the type of operating system this node is running on
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Version">
            <summary>
            Gets or sets the FileFlows version of this node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.FlowRunners">
            <summary>
            Gets or sets the number of flow runners this node can run simultaneously 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.SignalrUrl">
            <summary>
            Gets or sets the SignalrUrl this node uses
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Mappings">
            <summary>
            Gets or sets the mappings for this node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Schedule">
            <summary>
            Gets or sets the schedule for this node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.DontChangeOwner">
            <summary>
            Gets or sets if the owner should not be changed
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.DontSetPermissions">
            <summary>
            Gets or sets if permissions should not be set
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Permissions">
            <summary>
            Gets or sets the permissions to set
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.AllLibraries">
            <summary>
            Gets or sets if this node can process all libraries
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.Libraries">
            <summary>
            Gets or sets the libraries this node can process
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ProcessingNode.MaxFileSizeMb">
            <summary>
            Gets or sets the maximum file size this node can process
            </summary>
        </member>
        <member name="F:FileFlows.Shared.Models.ProcessingNode.DirectorySeperatorChar">
            <summary>
            The directory separator used by this node
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.ProcessingNode.Map(System.String)">
            <summary>
            Maps a path locally for this node
            </summary>
            <param name="path">The path to map</param>
            <returns>The path mapped locally for this node</returns>
        </member>
        <member name="M:FileFlows.Shared.Models.ProcessingNode.UnMap(System.String)">
            <summary>
            Unmaps a path for this node
            </summary>
            <param name="path">The mapped path</param>
            <returns>The unmapped path</returns>
        </member>
        <member name="T:FileFlows.Shared.Models.ReferenceModel">
            <summary>
            A list of UIDs used for deleting/enabled etc
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ReferenceModel.Uids">
            <summary>
            Gets or sets the UIDs 
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.RequestResult`1">
            <summary>
            A HTTP request result
            </summary>
            <typeparam name="T">the type of object the request returns</typeparam>
        </member>
        <member name="P:FileFlows.Shared.Models.RequestResult`1.Success">
            <summary>
            Gets or sets if the request was successful
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.RequestResult`1.Body">
            <summary>
            Gets or sets the HTML body of the request
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.RequestResult`1.Data">
            <summary>
            Gets or sets the parsed response object 
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Script">
            <summary>
            A script is a special function node that lets you reuse them
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Script.Code">
            <summary>
            Gets or sets the javascript code of the script
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Settings">
            <summary>
            Settings for FileFlows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.AutoUpdatePlugins">
            <summary>
            Gets or sets if plugins should automatically be updated when new version are available online
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.AutoUpdate">
            <summary>
            Gets or sets if the server should automatically update when a new version is available online
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.AutoUpdateNodes">
            <summary>
            Gets or sets if nodes should be automatically updated when the server is updated
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.DisableTelemetry">
            <summary>
            Gets or sets if telemetry should be disabled
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.PluginRepositoryUrls">
            <summary>
            Gets or sets a list of available URLs to additional plugin repositories
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.IsWindows">
            <summary>
            Gets or sets if this is running on Windows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.IsDocker">
            <summary>
            Gets or sets if this is running inside Docker
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Settings.Version">
            <summary>
            Gets or sets the FileFlows version number
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ShrinkageData">
            <summary>
            Information about how a library has shrunk after processing
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ShrinkageData.OriginalSize">
            <summary>
            Gets or sets the original size of the library files
            in the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ShrinkageData.FinalSize">
            <summary>
            Gets or sets the final size of the library files
            in the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ShrinkageData.Items">
            <summary>
            Gets or sets number of processed files in the library
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ShrinkageData.Difference">
            <summary>
            Gets the different of original size minus the final size,
            i.e. how much the library has shrunk after processing
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Statistics">
            <summary>
            Statistics of overall processed files
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Statistics.ExecutedNodes">
            <summary>
            Gets or set the nodes that have been executed
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Models.Statistics.RecordNode(FileFlows.Shared.Models.ExecutedNode)">
            <summary>
            Records a node execution
            </summary>
            <param name="node">The node to record</param>
        </member>
        <member name="T:FileFlows.Shared.Models.ExecutedNodeStatistic">
            <summary>
            Statistics for executed nodes
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNodeStatistic.Uid">
            <summary>
            Gets or sets the UID of the node 
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNodeStatistic.Outputs">
            <summary>
            Gets or sets the recorded outputs of this node
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.ExecutedNodeOutput">
            <summary>
            Information about an executed node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNodeOutput.Output">
            <summary>
            Gets or set the output of the executed node
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.ExecutedNodeOutput.Duration">
            <summary>
            Gets or sets the processing time of the executed node
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.SystemInfo">
            <summary>
            Gets the system information about FileFlows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.SystemInfo.MemoryUsage">
            <summary>
            Gets the amount of memory used by FileFlows
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.SystemInfo.CpuUsage">
            <summary>
            Gets the how much CPU is used by FileFlows
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Models.Tool">
            <summary>
            A tool in FileFlows, e.g. an external application
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Models.Tool.Path">
            <summary>
            Gets or sets the path of the tool
            </summary>
        </member>
        <member name="T:FileFlows.Shared.Translater">
            <summary>
            Translater is responsible for language translations
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Translater.Logger">
            <summary>
            Gets or sets the logger used by the translater when there are any translation issues
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Translater.TranslateIfNeeded(System.String)">
            <summary>
            Translates a string if the string needs trnslating
            </summary>
            <param name="value">The string to translate if needed</param>
            <returns>The translated string if needed, otherwise the original string</returns>
        </member>
        <member name="P:FileFlows.Shared.Translater.InitDone">
            <summary>
            Gets if the translator has been initialized
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Translater.NeedsTranslating(System.String)">
            <summary>
            Checks if a string needs translating
            </summary>
            <param name="label">The string to test</param>
            <returns>if the string needs to be translated or not</returns>
        </member>
        <member name="M:FileFlows.Shared.Translater.Init(System.String[])">
            <summary>
            Initializes the translator
            </summary>
            <param name="jsonFiles">a list of translation json files</param>
        </member>
        <member name="M:FileFlows.Shared.Translater.DeserializeAndFlatten(System.String)">
            <summary>
            Deserialized a json string and flattens it into a Dictionary using dot notation
            </summary>
            <param name="json">The json string to flatten</param>
            <returns>a dictionary of the flatten json string</returns>
        </member>
        <member name="M:FileFlows.Shared.Translater.Instant(System.String,System.Object,System.Boolean)">
            <summary>
            Translates a string
            </summary>
            <param name="key">The string to translate</param>
            <param name="parameters">any translation parameters</param>
            <param name="supressWarnings">if translation warnings should be suppressed and not printed to the log</param>
            <returns>the translated string</returns>
        </member>
        <member name="M:FileFlows.Shared.Translater.Instant(System.String[],System.Object,System.Boolean)">
            <summary>
            Attempts to translate from a range of possible keys.
            The first key found in the translation dictionary will be returned
            </summary>
            <param name="possibleKeys">a list of possible translation keys</param>
            <param name="parameters">any translation parameters</param>
            <param name="supressWarnings">if translation warnings should be suppressed and not printed to the log</param>
            <returns>the translated string</returns>
        </member>
        <member name="M:FileFlows.Shared.Translater.TranslateIfHasTranslation(System.String,System.String)">
            <summary>
            Translates a string if there is a translation for it
            </summary>
            <param name="key">the key to translate</param>
            <param name="default">the default string to return if no translation is found</param>
            <returns>the translated string or default if not found</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.DefaultValidator">
            <summary>
            Used instead of null
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.DefaultValidator.Validate(System.Object)">
            <summary>
            Validates a value
            </summary>
            <param name="value">the value to validate</param>
            <returns>If the value is valid or not</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.Pattern">
            <summary>
            Validates a string against a regular expression
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Validators.Pattern.Expression">
            <summary>
            Gets or sets the expression to validate against
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.Pattern.Validate(System.Object)">
            <summary>
            Validates the value against the regular expression
            </summary>
            <param name="value">the value to validate</param>
            <returns>true if valid otherwise false</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.Range">
            <summary>
            A validator to validate a number between a range of values
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Validators.Range.Minimum">
            <summary>
            Gets or sets the minimum valid number
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Validators.Range.Maximum">
            <summary>
            Gets or sets the maximum valid number
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.Range.Validate(System.Object)">
            <summary>
            Validates a value against the range
            </summary>
            <param name="value">the value to validate</param>
            <returns>true if the value is valid, otherwise false</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.Required">
            <summary>
            Validator to a validate a object has a value
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.Required.Validate(System.Object)">
            <summary>
            Validates the object has a value
            </summary>
            <param name="value">The value to validate</param>
            <returns>true if the value has a propre value</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.ScriptValidator">
            <summary>
            Validator that checks a Script object is valid
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.ScriptValidator.Validate(System.Object)">
            <summary>
            Validates a Script
            </summary>
            <param name="value">the Script code to validate</param>
            <returns>true if valid, otherwise false</returns>
        </member>
        <member name="T:FileFlows.Shared.Validators.Validator">
            <summary>
            A validator used to validate a value
            </summary>
        </member>
        <member name="P:FileFlows.Shared.Validators.Validator.Type">
            <summary>
            Gets the name of the type of validator
            </summary>
        </member>
        <member name="M:FileFlows.Shared.Validators.Validator.Validate(System.Object)">
            <summary>
            Validates a value using the validator
            </summary>
            <param name="value">the value to validate</param>
            <returns>true if the value is valid, otherwise false</returns>
        </member>
    </members>
</doc>
